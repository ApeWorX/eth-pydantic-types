Search.setIndex({"alltitles": {"Address": [[4, "address"]], "Bip122Uri": [[4, "bip122uri"]], "HexBytes": [[3, "module-eth_pydantic_types.hex.bytes"], [4, "hexbytes"]], "HexInt": [[3, "module-eth_pydantic_types.hex.int"], [4, "hexint"]], "HexStr": [[3, "module-eth_pydantic_types.hex.str"], [4, "hexstr"], [4, "id1"]], "Padding": [[4, "padding"]], "Python Reference": [[0, null]], "User Guides": [[0, null]], "eth-pydantic-types": [[4, null]], "eth_pydantic_types.abi": [[1, null]], "eth_pydantic_types.address": [[2, null]], "eth_pydantic_types.hex": [[3, null]]}, "docnames": ["index", "methoddocs/abi", "methoddocs/address", "methoddocs/hex", "userguides/quickstart"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["index.rst", "methoddocs/abi.md", "methoddocs/address.md", "methoddocs/hex.md", "userguides/quickstart.md"], "indexentries": {"address (class in eth_pydantic_types.address)": [[2, "eth_pydantic_types.address.Address", false]], "basehexint (class in eth_pydantic_types.hex.int)": [[3, "eth_pydantic_types.hex.int.BaseHexInt", false]], "basehexstr (class in eth_pydantic_types.hex.str)": [[3, "eth_pydantic_types.hex.str.BaseHexStr", false]], "boundhexbytes (class in eth_pydantic_types.hex.bytes)": [[3, "eth_pydantic_types.hex.bytes.BoundHexBytes", false]], "boundhexint (class in eth_pydantic_types.hex.int)": [[3, "eth_pydantic_types.hex.int.BoundHexInt", false]], "boundhexstr (class in eth_pydantic_types.hex.str)": [[3, "eth_pydantic_types.hex.str.BoundHexStr", false]], "bytes1 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes1", false]], "bytes10 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes10", false]], "bytes11 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes11", false]], "bytes12 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes12", false]], "bytes13 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes13", false]], "bytes14 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes14", false]], "bytes15 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes15", false]], "bytes16 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes16", false]], "bytes17 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes17", false]], "bytes18 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes18", false]], "bytes19 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes19", false]], "bytes2 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes2", false]], "bytes20 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes20", false]], "bytes21 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes21", false]], "bytes22 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes22", false]], "bytes23 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes23", false]], "bytes24 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes24", false]], "bytes25 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes25", false]], "bytes26 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes26", false]], "bytes27 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes27", false]], "bytes28 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes28", false]], "bytes29 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes29", false]], "bytes3 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes3", false]], "bytes30 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes30", false]], "bytes31 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes31", false]], "bytes32 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes32", false]], "bytes4 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes4", false]], "bytes5 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes5", false]], "bytes6 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes6", false]], "bytes7 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes7", false]], "bytes8 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes8", false]], "bytes9 (class in eth_pydantic_types.abi)": [[1, "eth_pydantic_types.abi.bytes9", false]], "eth_pydantic_types.abi": [[1, "module-eth_pydantic_types.abi", false]], "eth_pydantic_types.address": [[2, "module-eth_pydantic_types.address", false]], "eth_pydantic_types.hex.bytes": [[3, "module-eth_pydantic_types.hex.bytes", false]], "eth_pydantic_types.hex.int": [[3, "module-eth_pydantic_types.hex.int", false]], "eth_pydantic_types.hex.str": [[3, "module-eth_pydantic_types.hex.str", false]], "from_bytes() (eth_pydantic_types.hex.int.basehexint class method)": [[3, "eth_pydantic_types.hex.int.BaseHexInt.from_bytes", false]], "fromhex() (eth_pydantic_types.hex.bytes.hexbytes class method)": [[3, "eth_pydantic_types.hex.bytes.HexBytes.fromhex", false]], "hexbytes (class in eth_pydantic_types.hex.bytes)": [[3, "eth_pydantic_types.hex.bytes.HexBytes", false]], "hexbytes20 (class in eth_pydantic_types.hex.bytes)": [[3, "eth_pydantic_types.hex.bytes.HexBytes20", false]], "hexbytes32 (in module eth_pydantic_types.hex.bytes)": [[3, "eth_pydantic_types.hex.bytes.HexBytes32", false]], "hexint (class in eth_pydantic_types.hex.int)": [[3, "eth_pydantic_types.hex.int.HexInt", false]], "hexint32 (class in eth_pydantic_types.hex.int)": [[3, "eth_pydantic_types.hex.int.HexInt32", false]], "hexstr (class in eth_pydantic_types.hex.str)": [[3, "eth_pydantic_types.hex.str.HexStr", false]], "hexstr20 (class in eth_pydantic_types.hex.str)": [[3, "eth_pydantic_types.hex.str.HexStr20", false]], "hexstr32 (in module eth_pydantic_types.hex.str)": [[3, "eth_pydantic_types.hex.str.HexStr32", false]], "module": [[1, "module-eth_pydantic_types.abi", false], [2, "module-eth_pydantic_types.address", false], [3, "module-eth_pydantic_types.hex.bytes", false], [3, "module-eth_pydantic_types.hex.int", false], [3, "module-eth_pydantic_types.hex.str", false]], "uint256 (in module eth_pydantic_types.hex.int)": [[3, "eth_pydantic_types.hex.int.UInt256", false]]}, "objects": {"eth_pydantic_types": [[1, 0, 0, "-", "abi"], [2, 0, 0, "-", "address"]], "eth_pydantic_types.abi": [[1, 1, 1, "", "bytes1"], [1, 1, 1, "", "bytes10"], [1, 1, 1, "", "bytes11"], [1, 1, 1, "", "bytes12"], [1, 1, 1, "", "bytes13"], [1, 1, 1, "", "bytes14"], [1, 1, 1, "", "bytes15"], [1, 1, 1, "", "bytes16"], [1, 1, 1, "", "bytes17"], [1, 1, 1, "", "bytes18"], [1, 1, 1, "", "bytes19"], [1, 1, 1, "", "bytes2"], [1, 1, 1, "", "bytes20"], [1, 1, 1, "", "bytes21"], [1, 1, 1, "", "bytes22"], [1, 1, 1, "", "bytes23"], [1, 1, 1, "", "bytes24"], [1, 1, 1, "", "bytes25"], [1, 1, 1, "", "bytes26"], [1, 1, 1, "", "bytes27"], [1, 1, 1, "", "bytes28"], [1, 1, 1, "", "bytes29"], [1, 1, 1, "", "bytes3"], [1, 1, 1, "", "bytes30"], [1, 1, 1, "", "bytes31"], [1, 1, 1, "", "bytes32"], [1, 1, 1, "", "bytes4"], [1, 1, 1, "", "bytes5"], [1, 1, 1, "", "bytes6"], [1, 1, 1, "", "bytes7"], [1, 1, 1, "", "bytes8"], [1, 1, 1, "", "bytes9"]], "eth_pydantic_types.address": [[2, 1, 1, "", "Address"]], "eth_pydantic_types.hex": [[3, 0, 0, "-", "bytes"], [3, 0, 0, "-", "int"], [3, 0, 0, "-", "str"]], "eth_pydantic_types.hex.bytes": [[3, 1, 1, "", "BoundHexBytes"], [3, 1, 1, "", "HexBytes"], [3, 1, 1, "", "HexBytes20"], [3, 3, 1, "", "HexBytes32"]], "eth_pydantic_types.hex.bytes.HexBytes": [[3, 2, 1, "", "fromhex"]], "eth_pydantic_types.hex.int": [[3, 1, 1, "", "BaseHexInt"], [3, 1, 1, "", "BoundHexInt"], [3, 1, 1, "", "HexInt"], [3, 1, 1, "", "HexInt32"], [3, 3, 1, "", "UInt256"]], "eth_pydantic_types.hex.int.BaseHexInt": [[3, 2, 1, "", "from_bytes"]], "eth_pydantic_types.hex.str": [[3, 1, 1, "", "BaseHexStr"], [3, 1, 1, "", "BoundHexStr"], [3, 1, 1, "", "HexStr"], [3, 1, 1, "", "HexStr20"], [3, 3, 1, "", "HexStr32"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute"}, "terms": {"": 3, "01ef": 3, "0x000123": 4, "0x0123": 4, "0x0837207e343277cbd6c114a45ec0e9ec56a1ad84": 4, "0x123": 4, "0x837207e343277cbd6c114a45ec0e9ec56a1ad84": 4, "122": 4, "752820c0ad7abc1200f9ad42c4adc6fbb4bd44b5bed4667990e64565102c1ba6": 4, "A": 3, "For": 4, "If": 3, "The": [3, 4], "These": 1, "To": 3, "__eth_pydantic_validate__": 4, "abi": 0, "about": 4, "accept": 3, "account": 4, "address": 0, "alia": 3, "an": [3, 4], "annot": 4, "ar": [1, 3, 4], "argument": 3, "arrai": 3, "assert": 4, "automat": 4, "b": 3, "b9": 3, "base": [1, 2, 3], "basehex": 3, "basehexint": 3, "basehexstr": 3, "basemodel": 4, "befor": 4, "begin": 3, "between": 3, "big": 3, "binari": 4, "bip": 4, "block": 4, "blockchain": 4, "bool": [1, 3], "boundhexbyt": [1, 3], "boundhexint": 3, "boundhexstr": 3, "buffer": 3, "built": 3, "byte": [1, 3, 4], "bytearrai": [1, 3], "byteord": 3, "bytes1": 1, "bytes10": 1, "bytes11": 1, "bytes12": 1, "bytes13": 1, "bytes14": 1, "bytes15": 1, "bytes16": 1, "bytes17": 1, "bytes18": 1, "bytes19": 1, "bytes2": 1, "bytes20": 1, "bytes21": 1, "bytes22": 1, "bytes23": 1, "bytes24": 1, "bytes25": 1, "bytes26": 1, "bytes27": 1, "bytes28": 1, "bytes29": 1, "bytes3": 1, "bytes30": 1, "bytes31": 1, "bytes32": [1, 4], "bytes4": 1, "bytes5": 1, "bytes6": 1, "bytes7": 1, "bytes8": 1, "bytes9": 1, "can": 4, "care": 4, "checksum": [2, 4], "cl": 4, "class": [1, 2, 3, 4], "classmethod": [3, 4], "complement": 3, "construct": 4, "control": 4, "convert": 3, "core": 4, "creat": 3, "d4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3": 4, "data": [3, 4], "def": 4, "default": 4, "either": 3, "els": 4, "end": [3, 4], "eth": 0, "eth_pydantic_typ": [0, 4], "ethereum": 4, "exampl": [3, 4], "fals": 3, "field_nam": 4, "field_typ": 4, "field_valid": 4, "format": 4, "from": [3, 4], "from_byt": 3, "fromhex": 3, "ga": 4, "get": 4, "given": [3, 4], "hash": 4, "hash_any_s": 4, "hex": [0, 4], "hex_str": 3, "hexadecim": 3, "hexbytes20": [3, 4], "hexbytes32": [3, 4], "hexint32": 3, "hexstr20": [2, 3, 4], "hexstr32": [3, 4], "hold": 3, "host": 3, "howev": 4, "i": [3, 4], "import": 4, "includ": 3, "indic": 3, "individu": 4, "info": 4, "input": 4, "inspir": 4, "int": [1, 3, 4], "integ": [3, 4], "involv": 4, "isinst": 4, "iter": 3, "json": 4, "left": [2, 4], "like": 4, "littl": 3, "lowercas": 1, "match": 1, "memoryview": [1, 3], "messag": 4, "might": 4, "mirror": 4, "mode": 4, "model": [1, 4], "model_field": 4, "most": 3, "must": 3, "my_byt": 4, "my_str": 4, "mymodel": 4, "name": 1, "nativ": 3, "necessari": 2, "nonc": 4, "note": 4, "number": 3, "object": 3, "onli": 4, "order": 3, "other": 4, "packag": 4, "pad": 2, "path": 4, "produc": 3, "protocol": 3, "pydant": [0, 3], "receiv": 3, "repres": 3, "request": 3, "requir": 3, "return": [3, 4], "right": 4, "schema": 4, "serial": [3, 4], "sign": 3, "signific": 3, "size": [3, 4], "sized_hash": 4, "smaller": 4, "solid": 4, "space": 3, "specif": 3, "str": [1, 3, 4], "string": [3, 4], "support": 3, "sy": 3, "system": 3, "thi": 4, "transact": 4, "transactiondata": 4, "two": 3, "tx": 4, "type": [0, 1, 2], "uint256": 3, "un": 4, "up": 4, "uri": 4, "us": [1, 2, 3, 4], "util": 4, "val": [1, 3], "valid": [2, 3, 4], "validate_valu": 4, "valu": [3, 4], "well": 4, "when": [3, 4], "whether": 3, "work": 4, "x01": 3, "xb9": 3, "xef": 3, "you": 4, "your": 4, "zero": 2}, "titles": ["&lt;no title&gt;", "eth_pydantic_types.abi", "eth_pydantic_types.address", "eth_pydantic_types.hex", "eth-pydantic-types"], "titleterms": {"abi": 1, "address": [2, 4], "bip122uri": 4, "eth": 4, "eth_pydantic_typ": [1, 2, 3], "guid": 0, "hex": 3, "hexbyt": [3, 4], "hexint": [3, 4], "hexstr": [3, 4], "pad": 4, "pydant": 4, "python": 0, "refer": 0, "type": 4, "user": 0}})